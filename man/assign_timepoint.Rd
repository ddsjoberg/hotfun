% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign_timepoint.R
\name{assign_timepoint}
\alias{assign_timepoint}
\title{Assign a timepoint to a long dataset with multiple measures}
\usage{
assign_timepoint(data, id, ref_date, measure_date, timepoints, windows,
  time_units = c("days", "weeks", "months", "years"),
  new_var = "timepoint")
}
\arguments{
\item{data}{data frame}

\item{id}{id variable name, such as \code{"mrn"}}

\item{ref_date}{baseline or reference date column name}

\item{measure_date}{date the measure was collected}

\item{timepoints}{vector of timepoint to identify}

\item{windows}{list of windows around a timepoint that are acceptable}

\item{time_units}{one of \code{c("days", "weeks", "months", "years")}}

\item{new_var}{name of new variable, default is \code{"timepoint"}}
}
\value{
data frame passed in \code{data} with additional column \code{new_var}
}
\description{
Given a data set that has a measure collected over time and you want to extract,
for example the 3 month measurement, this function will find the measure
closest to 3 months within a defined window.
}
\examples{
ggplot2::economics_long \%>\%
dplyr::group_by(variable) \%>\%
dplyr::mutate(min_date = min(date)) \%>\%
dplyr::ungroup() \%>\%
assign_timepoint(
  id = "variable",
  ref_date = "min_date",
  measure_date = "date",
  timepoints = c(6, 12, 24),
  windows = list(c(-2, 2), c(-2, 2), c(-2, 2)),
  time_units = "months"
) \%>\%
dplyr::filter(!is.na(timepoint))
}
